version: '3'
services:
  nginx:
    container_name: pws_dev_nginx
    build: src/nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - pws-volume-data:/var/www
      - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src/nginx/sites/:/etc/nginx/sites-available
      - ./src/nginx/conf.d/:/etc/nginx/conf.d
    networks:
      - pws_net

  php:
    container_name: pws_dev_php
    build: src/php
    volumes:
      - pws-volume-data:/var/www
      - pws-volume-session-share:/tmp
    environment:
      APP_ENVIRONMENT: "dev"
      DB_HOST: "localhost"
      DB_PORT: "3306"
      DB_USER: "${DEFAULT_USER}"
      DB_PASSWORD: "${DEFAULT_PASSWORD}"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "${DEFAULT_PASSWORD}"
      ELASTICSEARCH_HOST: "elasticsearch"
      ELASTICSEARCH_PORT: "9200"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
    networks:
      - pws_net

  php-xdebug:
    container_name: pws_dev_php_xdebug
    build: src/php-xdebug
    volumes:
      - pws-volume-data:/var/www
      - pws-volume-session-share:/tmp
    environment:
      APP_ENVIRONMENT: "dev"
      DB_HOST: "localhost"
      DB_PORT: "3306"
      DB_USER: "${DEFAULT_USER}"
      DB_PASSWORD: "${DEFAULT_PASSWORD}"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "${DEFAULT_PASSWORD}"
      ELASTICSEARCH_HOST: "elasticsearch"
      ELASTICSEARCH_PORT: "9200"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
    networks:
      - pws_net

  mariadb:
    container_name: pws_dev_mariadb
    build: src/mariadb
    volumes:
      - pws-volume-mariadb:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DEFAULT_PASSWORD}"
      MYSQL_USER: "${DEFAULT_USER}"
      MYSQL_PASSWORD: "${DEFAULT_PASSWORD}"
    networks:
      - pws_net

  redis:
    container_name: pws_dev_redis
    image: redis:alpine
    hostname: redis
    command: redis-server --requirepass ${DEFAULT_PASSWORD}
    volumes:
      - pws-volume-redis:/data:cached
    ports:
      - "6379:6379"
    networks:
      - pws_net

  redis-commander:
    container_name: pws_dev_redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOST: "redis"
      REDIS_PASSWORD: "${DEFAULT_PASSWORD}"
    depends_on:
      - redis
    ports:
      - "8082:8081"
    networks:
      - pws_net

  rabbitmq:
    container_name: pws_dev_rabbitmq
    build: src/rabbitmq
    hostname: app-rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - pws-volume-rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "${DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${DEFAULT_PASSWORD}"
      RABBITMQ_DEFAULT_VHOST: "/"
    networks:
      - pws_net

  jenkins:
    container_name: pws_dev_jenkins
    build: src/jenkins
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - pws-volume-jenkins:/var/jenkins_home
    environment:
      JAVA_OPTS: '-Djenkins.install.runSetupWizard=false'
      JENKINS_USER: "${DEFAULT_USER}"
      JENKINS_PASS: "${DEFAULT_PASSWORD}"
    networks:
      - pws_net

  elasticsearch:
    container_name: pws_dev_elasticsearch
    image: elasticsearch:7.8.0
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.zen.minimum_master_nodes=1
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - pws_net

  kibana:
    container_name: pws_dev_kibana
    image: kibana:7.8.0
    ports:
      - "5601:5601"
    networks:
      - pws_net

  mailhog:
    container_name: pws_dev_mailhog
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - pws_net

volumes:
  pws-volume-elasticsearch:
  pws-volume-jenkins:
  pws-volume-rabbitmq:
  pws-volume-mariadb:
  pws-volume-redis:
  pws-volume-session-share:
  pws-volume-data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,actimeo=2,nfsvers=3
      device: ":/${WORKSPACE_PATH}"

networks:
  pws_net:
    driver: bridge